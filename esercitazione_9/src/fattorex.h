/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _FATTOREX_H_RPCGEN
#define _FATTOREX_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define MAXLENGTHSTRING 256
#define NUMGIUDICI 3

struct Giudice {
	char *nomeGiudice;
	int punteggioTot;
};
typedef struct Giudice Giudice;

struct Classifica {
	Giudice classificaGiudici[NUMGIUDICI];
};
typedef struct Classifica Classifica;

struct Voto {
	char *nomeCandidato;
	char tipoOp;
};
typedef struct Voto Voto;

#define VOTAFATTOREX 0x20000020
#define VOTAFATTOREXVERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define CLASSIFICA_GIUDICI 1
extern  Classifica * classifica_giudici_1(void *, CLIENT *);
extern  Classifica * classifica_giudici_1_svc(void *, struct svc_req *);
#define ESPRIMI_VOTO 2
extern  int * esprimi_voto_1(Voto *, CLIENT *);
extern  int * esprimi_voto_1_svc(Voto *, struct svc_req *);
extern int votafattorex_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define CLASSIFICA_GIUDICI 1
extern  Classifica * classifica_giudici_1();
extern  Classifica * classifica_giudici_1_svc();
#define ESPRIMI_VOTO 2
extern  int * esprimi_voto_1();
extern  int * esprimi_voto_1_svc();
extern int votafattorex_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_Giudice (XDR *, Giudice*);
extern  bool_t xdr_Classifica (XDR *, Classifica*);
extern  bool_t xdr_Voto (XDR *, Voto*);

#else /* K&R C */
extern bool_t xdr_Giudice ();
extern bool_t xdr_Classifica ();
extern bool_t xdr_Voto ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_FATTOREX_H_RPCGEN */
